# Generated from pymidi.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,82,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,0,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,
        6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,3,7,63,8,7,1,8,1,8,1,9,4,9,68,8,9,11,9,12,9,69,1,10,1,10,5,
        10,74,8,10,10,10,12,10,77,9,10,1,11,1,11,1,11,1,11,0,0,12,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,3,2,0,65,
        90,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,93,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,30,1,0,0,0,5,32,1,0,0,0,7,34,1,
        0,0,0,9,36,1,0,0,0,11,38,1,0,0,0,13,44,1,0,0,0,15,62,1,0,0,0,17,
        64,1,0,0,0,19,67,1,0,0,0,21,71,1,0,0,0,23,78,1,0,0,0,25,26,5,114,
        0,0,26,27,5,105,0,0,27,28,5,102,0,0,28,29,5,102,0,0,29,2,1,0,0,0,
        30,31,5,40,0,0,31,4,1,0,0,0,32,33,5,45,0,0,33,6,1,0,0,0,34,35,5,
        44,0,0,35,8,1,0,0,0,36,37,5,41,0,0,37,10,1,0,0,0,38,39,5,116,0,0,
        39,40,5,111,0,0,40,41,5,99,0,0,41,42,5,97,0,0,42,43,5,114,0,0,43,
        12,1,0,0,0,44,45,5,59,0,0,45,14,1,0,0,0,46,63,5,67,0,0,47,48,5,67,
        0,0,48,63,5,35,0,0,49,63,5,68,0,0,50,51,5,68,0,0,51,63,5,35,0,0,
        52,63,2,69,70,0,53,54,5,70,0,0,54,63,5,35,0,0,55,63,5,71,0,0,56,
        57,5,71,0,0,57,63,5,35,0,0,58,63,5,65,0,0,59,60,5,65,0,0,60,63,5,
        35,0,0,61,63,5,66,0,0,62,46,1,0,0,0,62,47,1,0,0,0,62,49,1,0,0,0,
        62,50,1,0,0,0,62,52,1,0,0,0,62,53,1,0,0,0,62,55,1,0,0,0,62,56,1,
        0,0,0,62,58,1,0,0,0,62,59,1,0,0,0,62,61,1,0,0,0,63,16,1,0,0,0,64,
        65,2,49,55,0,65,18,1,0,0,0,66,68,2,48,57,0,67,66,1,0,0,0,68,69,1,
        0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,20,1,0,0,0,71,75,7,0,0,0,72,
        74,7,1,0,0,73,72,1,0,0,0,74,77,1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,
        0,76,22,1,0,0,0,77,75,1,0,0,0,78,79,7,2,0,0,79,80,1,0,0,0,80,81,
        6,11,0,0,81,24,1,0,0,0,4,0,62,69,75,1,6,0,0
    ]

class pymidiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    NOTA = 8
    POSICAO = 9
    NUM = 10
    IDENT = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'riff'", "'('", "'-'", "','", "')'", "'tocar'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "NOTA", "POSICAO", "NUM", "IDENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "NOTA", "POSICAO", "NUM", "IDENT", "WS" ]

    grammarFileName = "pymidi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


