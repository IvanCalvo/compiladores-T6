# Generated from pymidi.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,90,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,0,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,
        6,1,6,1,7,1,7,1,8,4,8,50,8,8,11,8,12,8,51,1,8,1,8,4,8,56,8,8,11,
        8,12,8,57,3,8,60,8,8,1,9,1,9,5,9,64,8,9,10,9,12,9,67,9,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,3,10,85,8,10,1,11,1,11,1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,3,1,0,97,122,3,0,48,
        57,95,95,97,122,3,0,9,10,13,13,32,32,103,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,
        25,1,0,0,0,3,30,1,0,0,0,5,32,1,0,0,0,7,34,1,0,0,0,9,36,1,0,0,0,11,
        38,1,0,0,0,13,40,1,0,0,0,15,46,1,0,0,0,17,49,1,0,0,0,19,61,1,0,0,
        0,21,84,1,0,0,0,23,86,1,0,0,0,25,26,5,114,0,0,26,27,5,105,0,0,27,
        28,5,102,0,0,28,29,5,102,0,0,29,2,1,0,0,0,30,31,5,61,0,0,31,4,1,
        0,0,0,32,33,5,40,0,0,33,6,1,0,0,0,34,35,5,44,0,0,35,8,1,0,0,0,36,
        37,5,41,0,0,37,10,1,0,0,0,38,39,5,45,0,0,39,12,1,0,0,0,40,41,5,116,
        0,0,41,42,5,111,0,0,42,43,5,99,0,0,43,44,5,97,0,0,44,45,5,114,0,
        0,45,14,1,0,0,0,46,47,5,59,0,0,47,16,1,0,0,0,48,50,2,48,57,0,49,
        48,1,0,0,0,50,51,1,0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,52,59,1,0,0,
        0,53,55,5,46,0,0,54,56,2,48,57,0,55,54,1,0,0,0,56,57,1,0,0,0,57,
        55,1,0,0,0,57,58,1,0,0,0,58,60,1,0,0,0,59,53,1,0,0,0,59,60,1,0,0,
        0,60,18,1,0,0,0,61,65,7,0,0,0,62,64,7,1,0,0,63,62,1,0,0,0,64,67,
        1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,20,1,0,0,0,67,65,1,0,0,0,
        68,85,5,67,0,0,69,70,5,67,0,0,70,85,5,35,0,0,71,85,5,68,0,0,72,73,
        5,68,0,0,73,85,5,35,0,0,74,85,2,69,70,0,75,76,5,70,0,0,76,85,5,35,
        0,0,77,85,5,71,0,0,78,79,5,71,0,0,79,85,5,35,0,0,80,85,5,65,0,0,
        81,82,5,65,0,0,82,85,5,35,0,0,83,85,5,66,0,0,84,68,1,0,0,0,84,69,
        1,0,0,0,84,71,1,0,0,0,84,72,1,0,0,0,84,74,1,0,0,0,84,75,1,0,0,0,
        84,77,1,0,0,0,84,78,1,0,0,0,84,80,1,0,0,0,84,81,1,0,0,0,84,83,1,
        0,0,0,85,22,1,0,0,0,86,87,7,2,0,0,87,88,1,0,0,0,88,89,6,11,0,0,89,
        24,1,0,0,0,6,0,51,57,59,65,84,1,6,0,0
    ]

class pymidiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    NUM = 9
    IDENT = 10
    NOTA = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'riff'", "'='", "'('", "','", "')'", "'-'", "'tocar'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "NUM", "IDENT", "NOTA", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "NUM", "IDENT", "NOTA", "WS" ]

    grammarFileName = "pymidi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


