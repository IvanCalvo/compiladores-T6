# Generated from pymidi.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,90,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,
        1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,4,10,58,8,10,
        11,10,12,10,59,1,11,1,11,5,11,64,8,11,10,11,12,11,67,9,11,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,3,12,85,8,12,1,13,1,13,1,13,1,13,0,0,14,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,1,0,3,2,0,
        65,90,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,101,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,34,
        1,0,0,0,5,36,1,0,0,0,7,38,1,0,0,0,9,40,1,0,0,0,11,42,1,0,0,0,13,
        44,1,0,0,0,15,50,1,0,0,0,17,52,1,0,0,0,19,54,1,0,0,0,21,57,1,0,0,
        0,23,61,1,0,0,0,25,84,1,0,0,0,27,86,1,0,0,0,29,30,5,114,0,0,30,31,
        5,105,0,0,31,32,5,102,0,0,32,33,5,102,0,0,33,2,1,0,0,0,34,35,5,61,
        0,0,35,4,1,0,0,0,36,37,5,40,0,0,37,6,1,0,0,0,38,39,5,45,0,0,39,8,
        1,0,0,0,40,41,5,44,0,0,41,10,1,0,0,0,42,43,5,41,0,0,43,12,1,0,0,
        0,44,45,5,116,0,0,45,46,5,111,0,0,46,47,5,99,0,0,47,48,5,97,0,0,
        48,49,5,114,0,0,49,14,1,0,0,0,50,51,5,59,0,0,51,16,1,0,0,0,52,53,
        5,95,0,0,53,18,1,0,0,0,54,55,3,21,10,0,55,20,1,0,0,0,56,58,2,48,
        57,0,57,56,1,0,0,0,58,59,1,0,0,0,59,57,1,0,0,0,59,60,1,0,0,0,60,
        22,1,0,0,0,61,65,7,0,0,0,62,64,7,1,0,0,63,62,1,0,0,0,64,67,1,0,0,
        0,65,63,1,0,0,0,65,66,1,0,0,0,66,24,1,0,0,0,67,65,1,0,0,0,68,85,
        5,67,0,0,69,70,5,67,0,0,70,85,5,35,0,0,71,85,5,68,0,0,72,73,5,68,
        0,0,73,85,5,35,0,0,74,85,2,69,70,0,75,76,5,70,0,0,76,85,5,35,0,0,
        77,85,5,71,0,0,78,79,5,71,0,0,79,85,5,35,0,0,80,85,5,65,0,0,81,82,
        5,65,0,0,82,85,5,35,0,0,83,85,5,66,0,0,84,68,1,0,0,0,84,69,1,0,0,
        0,84,71,1,0,0,0,84,72,1,0,0,0,84,74,1,0,0,0,84,75,1,0,0,0,84,77,
        1,0,0,0,84,78,1,0,0,0,84,80,1,0,0,0,84,81,1,0,0,0,84,83,1,0,0,0,
        85,26,1,0,0,0,86,87,7,2,0,0,87,88,1,0,0,0,88,89,6,13,0,0,89,28,1,
        0,0,0,4,0,59,65,84,1,6,0,0
    ]

class pymidiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    POSICAO = 10
    NUM = 11
    IDENT = 12
    NOTA = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'riff'", "'='", "'('", "'-'", "','", "')'", "'tocar'", "';'", 
            "'_'" ]

    symbolicNames = [ "<INVALID>",
            "POSICAO", "NUM", "IDENT", "NOTA", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "POSICAO", "NUM", "IDENT", "NOTA", "WS" ]

    grammarFileName = "pymidi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


